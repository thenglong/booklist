{"version":3,"sources":["components/Book.jsx","components/BookList.jsx","utils/utils.js","components/Pagination.jsx","components/BookDetails.jsx","components/BooksPerPage.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Book","book","handleBookSelection","className","onClick","id","title","author","language","BookList","books","loading","map","session_url","username","password","populateData","a","opts","size","undefined","page","axios","get","auth","params","data","console","log","getBookById","BookId","Pagination","totalPages","handlePageNumChange","currentPage","allPages","start","end","result","i","push","getRange","pageNum","BookDetails","src","imageUrl","alt","year","country","pages","href","wikipediaLink","target","BooksPerPage","booksPerPage","handleBooksPerPageChange","onChange","e","value","App","useState","setLoading","setBooks","setCurrentPage","setBooksPerPage","setTotalPages","currentBookDetails","setCurrentBookDetails","useEffect","then","content","catch","err","bookId","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3e53b7f.chunk.js","sourcesContent":["import \"./Book.css\";\r\n\r\nexport default function Book({ book, handleBookSelection }) {\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"list-group-item list-group-item-action book\"\r\n                onClick={() => handleBookSelection(book.id)}\r\n            >\r\n                <div className=\"d-flex w-100 justify-content-between mb-2\">\r\n                    <h5 className=\"mb-1\">{book.title}</h5>\r\n                    <small className=\"pt-1\">\r\n                        By <span className=\"fw-bold\">{book.author}</span>\r\n                    </small>\r\n                </div>\r\n                <small>\r\n                    Language: <span className=\"fst-italic fs-6\">{book.language}</span>\r\n                </small>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import Book from \"./Book\";\r\n\r\nimport \"./BookList.css\";\r\n\r\nexport default function BookList({ books, loading, handleBookSelection }) {\r\n    return (\r\n        <div className=\"list-group book-list\">\r\n            {loading ? (\r\n                <div className=\"d-flex justify-content-center align-items-center h-100\">\r\n                    <p className=\"h4\">Loading...</p>\r\n                </div>\r\n            ) : (\r\n                books.map(book => (\r\n                    <Book key={book.id} book={book} handleBookSelection={handleBookSelection} />\r\n                ))\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst session_url = \"http://assignment-be.jaksmok.com/api/v1/\";\r\nconst username = \"sampleId\";\r\nconst password = \"Secret\";\r\n\r\n/**\r\n * Promise: return books data fetch from api with optional options\r\n *\r\n */\r\nconst populateData = async (opts = { size: undefined, page: undefined }) => {\r\n    if (opts[\"page\"] && opts[\"size\"])\r\n        return await (\r\n            await axios.get(session_url + \"books\", {\r\n                auth: { username, password },\r\n                params: { page: opts.page, size: opts.size },\r\n            })\r\n        ).data;\r\n    if (opts[\"page\"])\r\n        return await (\r\n            await axios.get(session_url + \"books\", {\r\n                auth: { username, password },\r\n                params: { page: opts.page },\r\n            })\r\n        ).data;\r\n    else if (opts[\"size\"]) {\r\n        console.log(\"right condition\");\r\n        return await (\r\n            await axios.get(session_url + \"books\", {\r\n                auth: { username, password },\r\n                params: { size: opts.size },\r\n            })\r\n        ).data;\r\n    } else\r\n        return await (await axios.get(session_url + \"books\", { auth: { username, password } }))\r\n            .data;\r\n};\r\n\r\n/**\r\n * Promise: return a book data fetch from api by specific id\r\n *\r\n */\r\nconst getBookById = async BookId => {\r\n    return await (\r\n        await axios.get(session_url + \"books/\" + BookId, { auth: { username, password } })\r\n    ).data;\r\n};\r\n\r\n/**\r\n * Retern an array that include all numbers in range\r\n *\r\n * @param {number} start The starting value\r\n * @param {number} end The ending value\r\n * @returns {[]} [...rangeFromStartToEndInclusive]\r\n */\r\nconst getRange = (start, end) => {\r\n    const result = [];\r\n    for (let i = start; i <= end; i++) result.push(i);\r\n    return result;\r\n};\r\n\r\nexport { populateData, getBookById, getRange };\r\n","import { getRange } from \"../utils/utils\";\r\n\r\nimport \"./Pagination.css\";\r\n\r\nexport default function Pagination({ totalPages, handlePageNumChange, currentPage }) {\r\n    const allPages = getRange(1, totalPages);\r\n\r\n    return (\r\n        <div className=\"d-flex align-items-center justify-content-center pagination-container mt-4\">\r\n            <nav className=\"m-0 p-0\">\r\n                <ul className=\"pagination\">\r\n                    {/* render previos page button if it's not the first page */}\r\n                    {currentPage !== 1 && totalPages > 1 ? (\r\n                        <li\r\n                            className=\"page-item\"\r\n                            onClick={() => handlePageNumChange(currentPage - 1)}\r\n                        >\r\n                            <div className=\"page-link\">\r\n                                <span>«</span>\r\n                            </div>\r\n                        </li>\r\n                    ) : null}\r\n\r\n                    {/* insert all page into pagination and mart the active one */}\r\n                    {allPages.map(pageNum => {\r\n                        return pageNum === currentPage ? (\r\n                            <li className=\"page-item active\" key={pageNum}>\r\n                                <div className=\"page-link\">{pageNum}</div>\r\n                            </li>\r\n                        ) : (\r\n                            <li\r\n                                className=\"page-item\"\r\n                                key={pageNum}\r\n                                onClick={() => handlePageNumChange(pageNum)}\r\n                            >\r\n                                <div className=\"page-link\">{pageNum}</div>\r\n                            </li>\r\n                        );\r\n                    })}\r\n\r\n                    {/* render next page button if it's not the last page */}\r\n                    {currentPage !== totalPages && totalPages > 1 ? (\r\n                        <li\r\n                            className=\"page-item\"\r\n                            onClick={() => handlePageNumChange(currentPage + 1)}\r\n                        >\r\n                            <div className=\"page-link\">\r\n                                <span>»</span>\r\n                            </div>\r\n                        </li>\r\n                    ) : null}\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n","import \"./BookDetails.css\";\r\n\r\nexport default function BookDetails({ book }) {\r\n    return book ? (\r\n        <div className=\"col h-100 p-0 rounded overflow-hidden ms-4 book-details-container\">\r\n            <div className=\"d-flex h-50 p-3 book-details-header\">\r\n                <img className=\"img-thumbnail h-100\" src={book.imageUrl} alt={book.title} />\r\n                <div className=\"mx-4 d-flex flex-column justify-content-center\">\r\n                    <h3 className=\"fw-bold h1 book-details-title\">{book.title}</h3>\r\n                    <hr />\r\n                    <small className=\"text-muted fw-bold\">\r\n                        By <span className=\"text-dark fst-italic\">{book.author}</span>\r\n                    </small>\r\n                    <small className=\"text-muted fw-bold\">\r\n                        Year <span className=\"text-dark fst-italic\">{book.year}</span>\r\n                    </small>\r\n                    <small className=\"text-muted fw-bold\">\r\n                        Language <span className=\"text-dark fst-italic\">{book.language}</span>\r\n                    </small>\r\n                </div>\r\n            </div>\r\n            <div className=\"p-3 h-50 d-flex flex-column book-details-content\">\r\n                <small className=\"text-muted fw-bold my-2\">\r\n                    Country <span className=\"text-dark fst-italic\">{book.country}</span>\r\n                </small>\r\n                <small className=\"text-muted fw-bold my-2\">\r\n                    Total Pages <span className=\"text-dark fst-italic\">{book.pages}</span>\r\n                </small>\r\n                <a className=\"fst-italic\" href={book.wikipediaLink} target=\"_blank\">\r\n                    More details on wikipedia\r\n                </a>\r\n            </div>\r\n        </div>\r\n    ) : (\r\n        <div className=\"col h-100 p-0 rounded overflow-hidden ms-4 d-flex justify-content-center align-items-center book-details-null\">\r\n            <h6 className=\"h2\">Select A Book in the list to see detail.</h6>\r\n        </div>\r\n    );\r\n}\r\n","import \"./BooksPerPage.css\";\r\n\r\nexport default function BooksPerPage({ booksPerPage, handleBooksPerPageChange }) {\r\n    const onChange = async e => {\r\n        handleBooksPerPageChange(e.target.value);\r\n    };\r\n    return (\r\n        <div className=\"d-flex w-100 justify-content-between align-items-center mb-2 book-list-header\">\r\n            <h3 className=\"text-decoration-underline\">Book List</h3>\r\n\r\n            <div className=\"input-group w-auto\">\r\n                <span className=\"input-group-text\">Books per pages</span>\r\n                <select\r\n                    className=\"form-control form-select books-per-pages\"\r\n                    value={booksPerPage}\r\n                    onChange={onChange}\r\n                >\r\n                    <option value={10}>10</option>\r\n                    <option value={20}>20</option>\r\n                    <option value={30}>30</option>\r\n                    <option value={40}>40</option>\r\n                    <option value={50}>50</option>\r\n                    <option value={60}>60</option>\r\n                    <option value={70}>70</option>\r\n                    <option value={80}>80</option>\r\n                    <option value={90}>90</option>\r\n                    <option value={100}>100</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { useState, useEffect } from \"react\";\n\nimport BookList from \"./components/BookList\";\nimport Pagination from \"./components/Pagination\";\nimport BookDetials from \"./components/BookDetails\";\nimport BooksPerPage from \"./components/BooksPerPage\";\n\nimport { populateData, getBookById } from \"./utils/utils\";\n\nimport \"./App.css\";\n\nexport default function App() {\n    const [loading, setLoading] = useState(true);\n    const [books, setBooks] = useState([]);\n    const [currentPage, setCurrentPage] = useState(0);\n    const [booksPerPage, setBooksPerPage] = useState(0);\n    const [totalPages, setTotalPages] = useState(0);\n    const [currentBookDetails, setCurrentBookDetails] = useState(null);\n\n    /**\n     * fetch data on first mount\n     */\n    useEffect(() => {\n        populateData()\n            .then(data => {\n                setBooks(data.content);\n                setCurrentPage(data.page + 1);\n                setBooksPerPage(data.size);\n                setTotalPages(data.totalPages);\n                setLoading(false);\n            })\n            .catch(err => console.log(err));\n    }, []);\n\n    /**\n     * Handle Books Per Page Change\n     */\n    const handleBooksPerPageChange = async size => {\n        setLoading(true);\n        setBooksPerPage(size);\n        const data = await populateData({ size });\n        setCurrentPage(1);\n        setBooks(data.content);\n        setTotalPages(data.totalPages);\n        setLoading(false);\n    };\n\n    /**\n     * Handle Pagination Number Click Change\n     */\n    const handlePageNumChange = async pageNum => {\n        setLoading(true);\n        const data = await populateData({ page: pageNum - 1, size: booksPerPage });\n        setBooks(data.content);\n        setCurrentPage(pageNum);\n        setLoading(false);\n    };\n\n    /**\n     * Handle Book Click\n     */\n    const handleBookSelection = async bookId => {\n        const book = await getBookById(bookId);\n        setCurrentBookDetails(book);\n    };\n\n    return (\n        <>\n            <div className=\"container py-5 main-container\">\n                <div className=\"row h-100 rounded\">\n                    <div className=\"col-5 h-100 px-0\">\n                        <div className=\"book-list--header-container\">\n                            <BooksPerPage\n                                booksPerPage={booksPerPage}\n                                setBooksPerPage={setBooksPerPage}\n                                handleBooksPerPageChange={handleBooksPerPageChange}\n                            />\n\n                            <BookList\n                                books={books}\n                                loading={loading}\n                                handleBookSelection={handleBookSelection}\n                            />\n                        </div>\n\n                        <Pagination\n                            totalPages={totalPages}\n                            currentPage={currentPage}\n                            handlePageNumChange={handlePageNumChange}\n                        />\n                    </div>\n                    <BookDetials book={currentBookDetails} />\n                </div>\n            </div>\n\n            <div className=\"bg-secondary footer\"></div>\n        </>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}